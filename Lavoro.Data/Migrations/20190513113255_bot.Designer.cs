// <auto-generated />
using System;
using Lavoro.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lavoro.Data.Migrations
{
    [DbContext(typeof(LaboroContext))]
    [Migration("20190513113255_bot")]
    partial class bot
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lavoro.Domain.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdLastMessageSeenByOtherUser");

                    b.Property<int?>("IdLastMessageSeenByStarterUser");

                    b.Property<int>("OtherUserId");

                    b.Property<int>("StarterUserId");

                    b.HasKey("Id");

                    b.HasIndex("IdLastMessageSeenByOtherUser")
                        .IsUnique()
                        .HasFilter("[IdLastMessageSeenByOtherUser] IS NOT NULL");

                    b.HasIndex("IdLastMessageSeenByStarterUser")
                        .IsUnique()
                        .HasFilter("[IdLastMessageSeenByStarterUser] IS NOT NULL");

                    b.HasIndex("OtherUserId");

                    b.HasIndex("StarterUserId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Lavoro.Domain.Contact", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("ContactId");

                    b.Property<bool>("Frequent");

                    b.Property<bool>("Starred");

                    b.HasKey("UserId", "ContactId");

                    b.HasIndex("ContactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Lavoro.Domain.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Extention");

                    b.Property<int>("FileType");

                    b.Property<string>("Location");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("Name");

                    b.Property<bool>("Offline");

                    b.Property<DateTime>("Opened");

                    b.Property<string>("Preview");

                    b.Property<string>("Size");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Lavoro.Domain.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Lavoro.Domain.Messages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChatId");

                    b.Property<string>("Message");

                    b.Property<DateTime>("Time");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Lavoro.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Avatar");

                    b.Property<DateTime>("Birthday");

                    b.Property<bool>("Bot");

                    b.Property<string>("Company");

                    b.Property<string>("Email");

                    b.Property<string>("JobTitle");

                    b.Property<string>("LastName");

                    b.Property<string>("Mood");

                    b.Property<string>("Name");

                    b.Property<string>("NickName");

                    b.Property<int>("Online");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Lavoro.Domain.UserGroup", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("GroupId");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("Lavoro.Domain.Chat", b =>
                {
                    b.HasOne("Lavoro.Domain.Messages", "LastMessageSeenByOtherUser")
                        .WithOne()
                        .HasForeignKey("Lavoro.Domain.Chat", "IdLastMessageSeenByOtherUser");

                    b.HasOne("Lavoro.Domain.Messages", "LastMessageSeenByStarterUser")
                        .WithOne()
                        .HasForeignKey("Lavoro.Domain.Chat", "IdLastMessageSeenByStarterUser");

                    b.HasOne("Lavoro.Domain.User", "OtherUser")
                        .WithMany("InChats")
                        .HasForeignKey("OtherUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lavoro.Domain.User", "StarterUser")
                        .WithMany("OutChats")
                        .HasForeignKey("StarterUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Lavoro.Domain.Contact", b =>
                {
                    b.HasOne("Lavoro.Domain.User", "ContactUser")
                        .WithMany("TheirContacts")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lavoro.Domain.User", "User")
                        .WithMany("MyContacts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Lavoro.Domain.File", b =>
                {
                    b.HasOne("Lavoro.Domain.User", "User")
                        .WithMany("Files")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Lavoro.Domain.Messages", b =>
                {
                    b.HasOne("Lavoro.Domain.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lavoro.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Lavoro.Domain.UserGroup", b =>
                {
                    b.HasOne("Lavoro.Domain.Group", "Group")
                        .WithMany("Users")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lavoro.Domain.User", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
